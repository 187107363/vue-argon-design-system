{"version":3,"sources":["webpack:///./src/views/components/JavascriptComponents/Tooltips.vue?ff3b","webpack:///./node_modules/bootstrap-vue/es/utils/object.js","webpack:///./node_modules/bootstrap-vue/es/utils/bv-event.class.js","webpack:///./node_modules/bootstrap-vue/es/utils/array.js","webpack:///./node_modules/bootstrap-vue/es/utils/dom.js","webpack:///./node_modules/bootstrap-vue/es/utils/tooltip.class.js","webpack:///./node_modules/bootstrap-vue/es/utils/warn.js","webpack:///./node_modules/bootstrap-vue/es/directives/tooltip/tooltip.js","webpack:///./node_modules/bootstrap-vue/es/utils/popover.class.js","webpack:///./node_modules/bootstrap-vue/es/directives/popover/popover.js","webpack:///src/views/components/JavascriptComponents/Tooltips.vue","webpack:///./src/views/components/JavascriptComponents/Tooltips.vue?d718","webpack:///./src/views/components/JavascriptComponents/Tooltips.vue","webpack:///./node_modules/popper.js/dist/esm/popper.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","directives","name","rawName","modifiers","hover","left","attrs","size","type","title","top","bottom","right","value","expression","staticRenderFns","Object","assign","target","varArgs","TypeError","to","index","arguments","length","nextSource","nextKey","prototype","hasOwnProperty","call","is","x","y","object_assign","keys","getOwnPropertyNames","defineProperties","defineProperty","freeze","getOwnPropertyDescriptor","getOwnPropertySymbols","getPrototypeOf","create","isFrozen","readonlyDescriptor","enumerable","configurable","writable","_createClass","props","i","descriptor","key","Constructor","protoProps","staticProps","_classCallCheck","instance","bv_event_class_BvEvent","BvEvent","eventInit","undefined","constructor","defaults","cancelable","nativeEvent","relatedTarget","vueTarget","defaultPrevented","preventDefault","get","bv_event_class","Array","from","toStr","toString","isCallable","fn","toInteger","number","Number","isNaN","isFinite","Math","floor","abs","maxSafeInteger","pow","toLength","min","max","arrayLike","C","items","mapFn","T","len","A","k","kValue","find","predicate","o","thisArg","isArray","arg","isElement","el","nodeType","Node","ELEMENT_NODE","isVisible","document","body","contains","getBoundingClientRect","height","width","isDisabled","disabled","classList","Boolean","getAttribute","dom_selectAll","selector","root","querySelectorAll","dom_select","querySelector","matches","proto","Element","Matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","sel","element","m","ownerDocument","item","closest","Closest","documentElement","parentElement","addClass","className","add","removeClass","remove","hasClass","setAttr","attr","setAttribute","removeAttr","removeAttribute","getAttr","getCS","window","getComputedStyle","eventOn","evtName","handler","addEventListener","eventOff","removeEventListener","_typeof","Symbol","iterator","obj","tooltip_class_createClass","tooltip_class_classCallCheck","NAME","CLASS_PREFIX","BSCLS_PREFIX_REGEX","RegExp","TRANSITION_DURATION","MODAL_CLOSE_EVENT","MODAL_CLASS","AttachmentMap","AUTO","TOP","RIGHT","BOTTOM","LEFT","TOPLEFT","TOPRIGHT","RIGHTTOP","RIGHTBOTTOM","BOTTOMLEFT","BOTTOMRIGHT","LEFTTOP","LEFTBOTTOM","OffsetMap","HoverState","SHOW","OUT","ClassName","FADE","Selector","TOOLTIP","TOOLTIP_INNER","ARROW","Defaults","animation","template","trigger","delay","html","placement","offset","arrowPadding","container","fallbackPlacement","callbacks","boundary","TransitionEndEvents","WebkitTransition","MozTransition","OTransition","transition","NEXTID","generateId","tooltip_class_ToolTip","ToolTip","config","$root","$isEnabled","$fadeTimeout","$hoverTimeout","$visibleInterval","$hoverState","$activeTrigger","$popper","$element","$tip","$id","$routeWatcher","$forceHide","forceHide","bind","$doHide","doHide","$doShow","doShow","$doDisable","doDisable","$doEnable","doEnable","updateConfig","updatedConfig","Default","show","hide","content","fixTitle","$config","unListen","listen","setWhileOpenListeners","clearTimeout","destroy","removeChild","enabledEvt","emitEvent","disabledEvt","event","click","isWithActiveTrigger","enter","leave","getTipElement","_this","tip","setContent","isWithContent","addAriaDescribedby","getPlacement","attachment","getAttachment","addAttachmentClass","showEvt","getContainer","appendChild","removePopper","popper","getPopperConfig","complete","fixTransition","prevHoverState","shownEvt","transitionOnce","on","_this2","clearInterval","setInterval","setModalListener","visibleCheck","setRouteWatcher","setOnTouchStartListener","test","callback","force","_this3","hideEvt","parentNode","removeAriaDescribedby","hiddenEvt","focus","evt","$emit","desc","split","concat","join","trim","_this4","filter","d","_this5","transEvents","getTransitionEndEvents","called","fnOnce","forEach","setTimeout","style","scheduleUpdate","innerHTML","compileTemplate","tabIndex","div","createElement","node","firstElementChild","setElementContent","getTitle","allowHtml","innerHtml","innerText","_this6","triggers","setRootListener","_this7","events","e","toggle","_this8","$route","$watch","newVal","oldVal","modal","id","disable","enable","_this9","children","_noop","titleType","_this10","_this11","_this12","getOffset","flip","behavior","arrow","preventOverflow","boundariesElement","onCreate","data","originalPlacement","handlePopperPlacementChange","onUpdate","arrowOffset","parseFloat","toUpperCase","tabClass","match","cls","cleanTipClass","initConfigAnimation","tooltip_class","warn","message","console","utils_warn","tooltip_typeof","inBrowser","BVTT","validTriggers","blur","parseBindings","bindings","mod","parseInt","slice","selectedTriggers","applyBVTT","vnode","context","removeBVTT","tooltip","inserted","update","oldValue","componentUpdated","unbind","popover_class_typeof","popover_class_createClass","popover_class_classCallCheck","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","popover_class_NAME","popover_class_CLASS_PREFIX","popover_class_BSCLS_PREFIX_REGEX","popover_class_Defaults","popover_class_ClassName","popover_class_Selector","TITLE","CONTENT","popover_class_PopOver","_ToolTip","PopOver","apply","hasTitle","hasContent","getContent","popover_class","popover_typeof","popover_inBrowser","BVPO","popover_validTriggers","popover_parseBindings","applyBVPO","removeBVPO","popover","Tooltipsvue_type_script_lang_js_","BTooltip","BPopover","JavascriptComponents_Tooltipsvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","global","isBrowser","longerTimeoutBrowsers","timeoutDuration","navigator","userAgent","indexOf","microtaskDebounce","Promise","resolve","then","taskDebounce","scheduled","supportsMicroTasks","debounce","isFunction","functionToCheck","getType","getStyleComputedProperty","property","css","getParentNode","nodeName","host","getScrollParent","_getStyleComputedProp","overflow","overflowX","overflowY","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","getRoot","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","element1root","getScroll","side","upperSide","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","getBordersSize","styles","axis","sideA","sideB","getSize","computedStyle","getWindowSizes","classCallCheck","createClass","_extends","source","getClientRect","offsets","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","isFixed","getFixedPositionOffsetParent","getBoundaries","reference","padding","boundaries","boundariesNode","_getWindowSizes","getArea","_ref","computeAutoPlacement","refRect","rects","sortedAreas","map","area","sort","a","b","filteredAreas","_ref2","computedPlacement","variation","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","marginBottom","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","arr","check","findIndex","prop","cur","runModifiers","ends","modifiersToRun","enabled","isDestroyed","arrowStyles","attributes","flipped","options","positionFixed","position","isCreated","isModifierEnabled","modifierName","some","getSupportedPropertyName","prefixes","upperProp","charAt","prefix","toCheck","willChange","disableEventListeners","removeOnDestroy","getWindow","defaultView","attachToScrollParents","scrollParents","isBody","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","removeEventListeners","cancelAnimationFrame","isNumeric","n","setStyles","unit","setAttributes","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","round","prefixedProperty","invertTop","invertLeft","x-placement","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets$arrow","_data$offsets","isVertical","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","getOppositeVariation","placements","validPlacements","clockwise","counter","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","placementOpposite","flipOrder","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","str","parseOffset","basePlacement","useHeight","fragments","frag","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","shift","shiftvariation","shiftOffsets","bound","inner","subtractLength","onLoad","Popper","requestAnimationFrame","jquery","Utils","PopperUtils"],"mappings":"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","file":"js/chunk-52e4.abd513d9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('small',{staticClass:\"d-block text-uppercase font-weight-bold mb-3\"},[_vm._v(\"Tooltips\")]),_c('base-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.left\",modifiers:{\"hover\":true,\"left\":true}}],staticClass:\"btn-tooltip\",attrs:{\"size\":\"sm\",\"type\":\"primary\",\"title\":\"Tooltip on left\"}},[_vm._v(\"On left\\n        \")]),_c('base-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.top\",modifiers:{\"hover\":true,\"top\":true}}],staticClass:\"btn-tooltip\",attrs:{\"size\":\"sm\",\"type\":\"primary\",\"title\":\"Tooltip on top\"}},[_vm._v(\"On top\\n        \")]),_c('base-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.bottom\",modifiers:{\"hover\":true,\"bottom\":true}}],staticClass:\"btn-tooltip\",attrs:{\"size\":\"sm\",\"type\":\"primary\",\"title\":\"Tooltip on bottom\"}},[_vm._v(\"On bottom\\n        \")]),_c('base-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.right\",modifiers:{\"hover\":true,\"right\":true}}],staticClass:\"btn-tooltip\",attrs:{\"size\":\"sm\",\"type\":\"primary\",\"title\":\"Tooltip on right\"}},[_vm._v(\"On right\\n        \")])],1),_c('div',{staticClass:\"col-lg-6 mt-4 mt-lg-0\"},[_c('small',{staticClass:\"d-block text-uppercase font-weight-bold mb-3\"},[_vm._v(\"Popovers\")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.left\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"left\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On Left\"}},[_vm._v(\"On left\\n        \")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.left\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"left\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On Left\"}},[_vm._v(\"On left\\n        \")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.top\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"top\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On Top\"}},[_vm._v(\"On top\\n        \")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.right\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"right\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On right\"}},[_vm._v(\"On right\\n        \")]),_c('base-button',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.bottom\",value:('Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'),expression:\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\",modifiers:{\"hover\":true,\"bottom\":true}}],attrs:{\"size\":\"sm\",\"type\":\"default\",\"title\":\"Popover On bottom\"}},[_vm._v(\"On bottom\\n        \")])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * Aliasing Object[method] allows the minifier to shorten methods to a single character variable,\n * as well as giving BV a chance to inject polyfills.\n * As long as we avoid\n * - import * as Object from \"utils/object\"\n * all unused exports should be removed by tree-shaking.\n */\n\n// @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign !== 'function') {\n  Object.assign = function (target, varArgs) {\n    // .length of function is 2\n\n    if (target == null) {\n      // TypeError if undefined or null\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var to = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var nextSource = arguments[index];\n\n      if (nextSource != null) {\n        // Skip over if undefined or null\n        for (var nextKey in nextSource) {\n          // Avoid bugs when hasOwnProperty is shadowed\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n    return to;\n  };\n}\n\n// @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is#Polyfill\nif (!Object.is) {\n  Object.is = function (x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      // eslint-disable-next-line no-self-compare\n      return x !== x && y !== y;\n    }\n  };\n}\n\nexport var assign = Object.assign;\nexport var getOwnPropertyNames = Object.getOwnPropertyNames;\nexport var keys = Object.keys;\nexport var defineProperties = Object.defineProperties;\nexport var defineProperty = Object.defineProperty;\nexport var freeze = Object.freeze;\nexport var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nexport var getOwnPropertySymbols = Object.getOwnPropertySymbols;\nexport var getPrototypeOf = Object.getPrototypeOf;\nexport var create = Object.create;\nexport var isFrozen = Object.isFrozen;\nexport var is = Object.is;\n\nexport function readonlyDescriptor() {\n  return { enumerable: true, configurable: false, writable: false };\n}","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { assign, defineProperty, defineProperties, readonlyDescriptor } from '../utils/object';\n\nvar BvEvent = function () {\n  function BvEvent(type) {\n    var eventInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, BvEvent);\n\n    // Start by emulating native Event constructor.\n    if (!type) {\n      throw new TypeError('Failed to construct \\'' + this.constructor.name + '\\'. 1 argument required, ' + arguments.length + ' given.');\n    }\n    // Assign defaults first, the eventInit,\n    // and the type last so it can't be overwritten.\n    assign(this, BvEvent.defaults(), eventInit, { type: type });\n    // Freeze some props as readonly, but leave them enumerable.\n    defineProperties(this, {\n      type: readonlyDescriptor(),\n      cancelable: readonlyDescriptor(),\n      nativeEvent: readonlyDescriptor(),\n      target: readonlyDescriptor(),\n      relatedTarget: readonlyDescriptor(),\n      vueTarget: readonlyDescriptor()\n    });\n    // Create a private variable using closure scoping.\n    var defaultPrevented = false;\n    // Recreate preventDefault method. One way setter.\n    this.preventDefault = function preventDefault() {\n      if (this.cancelable) {\n        defaultPrevented = true;\n      }\n    };\n    // Create 'defaultPrevented' publicly accessible prop\n    // that can only be altered by the preventDefault method.\n    defineProperty(this, 'defaultPrevented', {\n      enumerable: true,\n      get: function get() {\n        return defaultPrevented;\n      }\n    });\n  }\n\n  _createClass(BvEvent, null, [{\n    key: 'defaults',\n    value: function defaults() {\n      return {\n        type: '',\n        cancelable: true,\n        nativeEvent: null,\n        target: null,\n        relatedTarget: null,\n        vueTarget: null\n      };\n    }\n  }]);\n\n  return BvEvent;\n}();\n\nexport default BvEvent;","// Production steps of ECMA-262, Edition 6, 22.1.2.1\n// es6-ified by @alexsasharegan\nif (!Array.from) {\n  Array.from = function () {\n    var toStr = Object.prototype.toString;\n    var isCallable = function isCallable(fn) {\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n    };\n    var toInteger = function toInteger(value) {\n      var number = Number(value);\n      if (isNaN(number)) {\n        return 0;\n      }\n      if (number === 0 || !isFinite(number)) {\n        return number;\n      }\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n    };\n    var maxSafeInteger = Math.pow(2, 53) - 1;\n    var toLength = function toLength(value) {\n      return Math.min(Math.max(toInteger(value), 0), maxSafeInteger);\n    };\n\n    // The length property of the from method is 1.\n    return function from(arrayLike /*, mapFn, thisArg */) {\n      // 1. Let C be the this value.\n      var C = this;\n\n      // 2. Let items be ToObject(arrayLike).\n      var items = Object(arrayLike);\n\n      // 3. ReturnIfAbrupt(items).\n      if (arrayLike == null) {\n        throw new TypeError('Array.from requires an array-like object - not null or undefined');\n      }\n\n      // 4. If mapfn is undefined, then let mapping be false.\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n      var T = void 0;\n\n      if (typeof mapFn !== 'undefined') {\n        // 5. else\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n        if (!isCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        }\n\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n      }\n\n      // 10. Let lenValue be Get(items, \"length\").\n      // 11. Let len be ToLength(lenValue).\n      var len = toLength(items.length);\n\n      // 13. If IsConstructor(C) is true, then\n      // 13. a. Let A be the result of calling the [[Construct]] internal method\n      // of C with an argument list containing the single item len.\n      // 14. a. Else, Let A be ArrayCreate(len).\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n      // 16. Let k be 0.\n      var k = 0;\n      // 17. Repeat, while k < len… (also steps a - h)\n      var kValue = void 0;\n      while (k < len) {\n        kValue = items[k];\n        if (mapFn) {\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n        } else {\n          A[k] = kValue;\n        }\n        k += 1;\n      }\n      // 18. Let putStatus be Put(A, \"length\", len, true).\n      A.length = len;\n      // 20. Return A.\n      return A;\n    };\n  }();\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n// Needed for IE support\nif (!Array.prototype.find) {\n  // eslint-disable-next-line no-extend-native\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function value(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return undefined.\n      return undefined;\n    }\n  });\n}\n\nif (!Array.isArray) {\n  Array.isArray = function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  };\n}\n\n// Static\nexport var from = Array.from;\nexport var isArray = Array.isArray;\n\n// Instance\nexport var arrayIncludes = function arrayIncludes(array, value) {\n  return array.indexOf(value) !== -1;\n};\nexport var arrayFind = function arrayFind(array, fn, thisArg) {\n  return array.find(fn, thisArg);\n};\nexport function concat() {\n  return Array.prototype.concat.apply([], arguments);\n}","import { from as arrayFrom } from './array';\n\n// Determine if an element is an HTML Element\nexport var isElement = function isElement(el) {\n  return el && el.nodeType === Node.ELEMENT_NODE;\n};\n\n// Determine if an HTML element is visible - Faster than CSS check\nexport var isVisible = function isVisible(el) {\n  return isElement(el) && document.body.contains(el) && el.getBoundingClientRect().height > 0 && el.getBoundingClientRect().width > 0;\n};\n\n// Determine if an element is disabled\nexport var isDisabled = function isDisabled(el) {\n  return !isElement(el) || el.disabled || el.classList.contains('disabled') || Boolean(el.getAttribute('disabled'));\n};\n\n// Cause/wait-for an element to reflow it's content (adjusting it's height/width)\nexport var reflow = function reflow(el) {\n  // requsting an elements offsetHight will trigger a reflow of the element content\n  return isElement(el) && el.offsetHeight;\n};\n\n// Select all elements matching selector. Returns [] if none found\nexport var selectAll = function selectAll(selector, root) {\n  if (!isElement(root)) {\n    root = document;\n  }\n  return arrayFrom(root.querySelectorAll(selector));\n};\n\n// Select a single element, returns null if not found\nexport var select = function select(selector, root) {\n  if (!isElement(root)) {\n    root = document;\n  }\n  return root.querySelector(selector) || null;\n};\n\n// Determine if an element matches a selector\nexport var matches = function matches(el, selector) {\n  if (!isElement(el)) {\n    return false;\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n  // Prefer native implementations over polyfill function\n  var proto = Element.prototype;\n  var Matches = proto.matches || proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector || proto.webkitMatchesSelector ||\n  /* istanbul ignore next */\n  function (sel) {\n    var element = this;\n    var m = selectAll(sel, element.document || element.ownerDocument);\n    var i = m.length;\n    // eslint-disable-next-line no-empty\n    while (--i >= 0 && m.item(i) !== element) {}\n    return i > -1;\n  };\n\n  return Matches.call(el, selector);\n};\n\n// Finds closest element matching selector. Returns null if not found\nexport var closest = function closest(selector, root) {\n  if (!isElement(root)) {\n    return null;\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n  // Since we dont support IE < 10, we can use the \"Matches\" version of the polyfill for speed\n  // Prefer native implementation over polyfill function\n  var Closest = Element.prototype.closest ||\n  /* istanbul ignore next */\n  function (sel) {\n    var element = this;\n    if (!document.documentElement.contains(element)) {\n      return null;\n    }\n    do {\n      // Use our \"patched\" matches function\n      if (matches(element, sel)) {\n        return element;\n      }\n      element = element.parentElement;\n    } while (element !== null);\n    return null;\n  };\n\n  var el = Closest.call(root, selector);\n  // Emulate jQuery closest and return null if match is the passed in element (root)\n  return el === root ? null : el;\n};\n\n// Get an element given an ID\nexport var getById = function getById(id) {\n  return document.getElementById(/^#/.test(id) ? id.slice(1) : id) || null;\n};\n\n// Add a class to an element\nexport var addClass = function addClass(el, className) {\n  if (className && isElement(el)) {\n    el.classList.add(className);\n  }\n};\n\n// Remove a class from an element\nexport var removeClass = function removeClass(el, className) {\n  if (className && isElement(el)) {\n    el.classList.remove(className);\n  }\n};\n\n// Test if an element has a class\nexport var hasClass = function hasClass(el, className) {\n  if (className && isElement(el)) {\n    return el.classList.contains(className);\n  }\n  return false;\n};\n\n// Set an attribute on an element\nexport var setAttr = function setAttr(el, attr, value) {\n  if (attr && isElement(el)) {\n    el.setAttribute(attr, value);\n  }\n};\n\n// Remove an attribute from an element\nexport var removeAttr = function removeAttr(el, attr) {\n  if (attr && isElement(el)) {\n    el.removeAttribute(attr);\n  }\n};\n\n// Get an attribute value from an element (returns null if not found)\nexport var getAttr = function getAttr(el, attr) {\n  if (attr && isElement(el)) {\n    return el.getAttribute(attr);\n  }\n  return null;\n};\n\n// Determine if an attribute exists on an element (returns true or false, or null if element not found)\nexport var hasAttr = function hasAttr(el, attr) {\n  if (attr && isElement(el)) {\n    return el.hasAttribute(attr);\n  }\n  return null;\n};\n\n// Return the Bounding Client Rec of an element. Retruns null if not an element\nexport var getBCR = function getBCR(el) {\n  return isElement(el) ? el.getBoundingClientRect() : null;\n};\n\n// Get computed style object for an element\nexport var getCS = function getCS(el) {\n  return isElement(el) ? window.getComputedStyle(el) : {};\n};\n\n// Return an element's offset wrt document element\n// https://j11y.io/jquery/#v=git&fn=jQuery.fn.offset\nexport var offset = function offset(el) {\n  if (isElement(el)) {\n    if (!el.getClientRects().length) {\n      return { top: 0, left: 0 };\n    }\n    var bcr = getBCR(el);\n    var win = el.ownerDocument.defaultView;\n    return {\n      top: bcr.top + win.pageYOffset,\n      left: bcr.left + win.pageXOffset\n    };\n  }\n};\n\n// Return an element's offset wrt to it's offsetParent\n// https://j11y.io/jquery/#v=git&fn=jQuery.fn.position\nexport var position = function position(el) {\n  if (!isElement(el)) {\n    return;\n  }\n  var parentOffset = { top: 0, left: 0 };\n  var offsetSelf = void 0;\n  var offsetParent = void 0;\n  if (getCS(el).position === 'fixed') {\n    offsetSelf = getBCR(el);\n  } else {\n    offsetSelf = offset(el);\n    var doc = el.ownerDocument;\n    offsetParent = el.offsetParent || doc.documentElement;\n    while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && getCS(offsetParent).position === 'static') {\n      offsetParent = offsetParent.parentNode;\n    }\n    if (offsetParent && offsetParent !== el && offsetParent.nodeType === Node.ELEMENT_NODE) {\n      parentOffset = offset(offsetParent);\n      parentOffset.top += parseFloat(getCS(offsetParent).borderTopWidth);\n      parentOffset.left += parseFloat(getCS(offsetParent).borderLeftWidth);\n    }\n  }\n  return {\n    top: offsetSelf.top - parentOffset.top - parseFloat(getCS(el).marginTop),\n    left: offsetSelf.left - parentOffset.left - parseFloat(getCS(el).marginLeft)\n  };\n};\n\n// Attach an event listener to an element\nexport var eventOn = function eventOn(el, evtName, handler) {\n  if (el && el.addEventListener) {\n    el.addEventListener(evtName, handler);\n  }\n};\n\n// Remove an event listener from an element\nexport var eventOff = function eventOff(el, evtName, handler) {\n  if (el && el.removeEventListener) {\n    el.removeEventListener(evtName, handler);\n  }\n};","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Popper from 'popper.js';\nimport BvEvent from './bv-event.class';\nimport { assign } from './object';\nimport { from as arrayFrom } from './array';\nimport { closest, select, isVisible, isDisabled, getCS, addClass, removeClass, hasClass, setAttr, removeAttr, getAttr, eventOn, eventOff } from './dom';\n\nvar NAME = 'tooltip';\nvar CLASS_PREFIX = 'bs-tooltip';\nvar BSCLS_PREFIX_REGEX = new RegExp('\\\\b' + CLASS_PREFIX + '\\\\S+', 'g');\n\nvar TRANSITION_DURATION = 150;\n\n// Modal $root hidden event\nvar MODAL_CLOSE_EVENT = 'bv::modal::hidden';\n// Modal container for appending tip/popover\nvar MODAL_CLASS = '.modal-content';\n\nvar AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: 'right',\n  BOTTOM: 'bottom',\n  LEFT: 'left',\n  TOPLEFT: 'top',\n  TOPRIGHT: 'top',\n  RIGHTTOP: 'right',\n  RIGHTBOTTOM: 'right',\n  BOTTOMLEFT: 'bottom',\n  BOTTOMRIGHT: 'bottom',\n  LEFTTOP: 'left',\n  LEFTBOTTOM: 'left'\n};\n\nvar OffsetMap = {\n  AUTO: 0,\n  TOPLEFT: -1,\n  TOP: 0,\n  TOPRIGHT: +1,\n  RIGHTTOP: -1,\n  RIGHT: 0,\n  RIGHTBOTTOM: +1,\n  BOTTOMLEFT: -1,\n  BOTTOM: 0,\n  BOTTOMRIGHT: +1,\n  LEFTTOP: -1,\n  LEFT: 0,\n  LEFTBOTTOM: +1\n};\n\nvar HoverState = {\n  SHOW: 'show',\n  OUT: 'out'\n};\n\nvar ClassName = {\n  FADE: 'fade',\n  SHOW: 'show'\n};\n\nvar Selector = {\n  TOOLTIP: '.tooltip',\n  TOOLTIP_INNER: '.tooltip-inner',\n  ARROW: '.arrow'\n\n  // ESLINT: Not used\n  // const Trigger = {\n  //   HOVER: 'hover',\n  //   FOCUS: 'focus',\n  //   CLICK: 'click',\n  //   BLUR: 'blur',\n  //   MANUAL: 'manual'\n  // }\n\n};var Defaults = {\n  animation: true,\n  template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<div class=\"tooltip-inner\"></div>' + '</div>',\n  trigger: 'hover focus',\n  title: '',\n  delay: 0,\n  html: false,\n  placement: 'top',\n  offset: 0,\n  arrowPadding: 6,\n  container: false,\n  fallbackPlacement: 'flip',\n  callbacks: {},\n  boundary: 'scrollParent'\n\n  // Transition Event names\n};var TransitionEndEvents = {\n  WebkitTransition: ['webkitTransitionEnd'],\n  MozTransition: ['transitionend'],\n  OTransition: ['otransitionend', 'oTransitionEnd'],\n  transition: ['transitionend']\n\n  // Client Side Tip ID counter for aria-describedby attribute\n  // Could use Alex's uid generator util\n  // Each tooltip requires a unique client side ID\n};var NEXTID = 1;\n/* istanbul ignore next */\nfunction generateId(name) {\n  return '__BV_' + name + '_' + NEXTID++ + '__';\n}\n\n/*\n * ToolTip Class definition\n */\n/* istanbul ignore next: difficult to test in Jest/JSDOM environment */\n\nvar ToolTip = function () {\n  // Main constructor\n  function ToolTip(element, config, $root) {\n    _classCallCheck(this, ToolTip);\n\n    // New tooltip object\n    this.$isEnabled = true;\n    this.$fadeTimeout = null;\n    this.$hoverTimeout = null;\n    this.$visibleInterval = null;\n    this.$hoverState = '';\n    this.$activeTrigger = {};\n    this.$popper = null;\n    this.$element = element;\n    this.$tip = null;\n    this.$id = generateId(this.constructor.NAME);\n    this.$root = $root || null;\n    this.$routeWatcher = null;\n    // We use a bound version of the following handlers for root/modal listeners to maintain the 'this' context\n    this.$forceHide = this.forceHide.bind(this);\n    this.$doHide = this.doHide.bind(this);\n    this.$doShow = this.doShow.bind(this);\n    this.$doDisable = this.doDisable.bind(this);\n    this.$doEnable = this.doEnable.bind(this);\n    // Set the configuration\n    this.updateConfig(config);\n  }\n\n  // NOTE: Overridden by PopOver class\n\n\n  _createClass(ToolTip, [{\n    key: 'updateConfig',\n\n\n    // Update config\n    value: function updateConfig(config) {\n      // Merge config into defaults. We use \"this\" here because PopOver overrides Default\n      var updatedConfig = assign({}, this.constructor.Default, config);\n\n      // Sanitize delay\n      if (config.delay && typeof config.delay === 'number') {\n        updatedConfig.delay = {\n          show: config.delay,\n          hide: config.delay\n        };\n      }\n\n      // Title for tooltip and popover\n      if (config.title && typeof config.title === 'number') {\n        updatedConfig.title = config.title.toString();\n      }\n\n      // Content only for popover\n      if (config.content && typeof config.content === 'number') {\n        updatedConfig.content = config.content.toString();\n      }\n\n      // Hide element original title if needed\n      this.fixTitle();\n      // Update the config\n      this.$config = updatedConfig;\n      // Stop/Restart listening\n      this.unListen();\n      this.listen();\n    }\n\n    // Destroy this instance\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      // Stop listening to trigger events\n      this.unListen();\n      // Disable while open listeners/watchers\n      this.setWhileOpenListeners(false);\n      // Clear any timeouts\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverTimeout = null;\n      clearTimeout(this.$fadeTimeout);\n      this.$fadeTimeout = null;\n      // Remove popper\n      if (this.$popper) {\n        this.$popper.destroy();\n      }\n      this.$popper = null;\n      // Remove tip from document\n      if (this.$tip && this.$tip.parentElement) {\n        this.$tip.parentElement.removeChild(this.$tip);\n      }\n      this.$tip = null;\n      // Null out other properties\n      this.$id = null;\n      this.$isEnabled = null;\n      this.$root = null;\n      this.$element = null;\n      this.$config = null;\n      this.$hoverState = null;\n      this.$activeTrigger = null;\n      this.$forceHide = null;\n      this.$doHide = null;\n      this.$doShow = null;\n      this.$doDisable = null;\n      this.$doEnable = null;\n    }\n  }, {\n    key: 'enable',\n    value: function enable() {\n      // Create a non-cancelable BvEvent\n      var enabledEvt = new BvEvent('enabled', {\n        cancelable: false,\n        target: this.$element,\n        relatedTarget: null\n      });\n      this.$isEnabled = true;\n      this.emitEvent(enabledEvt);\n    }\n  }, {\n    key: 'disable',\n    value: function disable() {\n      // Create a non-cancelable BvEvent\n      var disabledEvt = new BvEvent('disabled', {\n        cancelable: false,\n        target: this.$element,\n        relatedTarget: null\n      });\n      this.$isEnabled = false;\n      this.emitEvent(disabledEvt);\n    }\n\n    // Click toggler\n\n  }, {\n    key: 'toggle',\n    value: function toggle(event) {\n      if (!this.$isEnabled) {\n        return;\n      }\n      if (event) {\n        this.$activeTrigger.click = !this.$activeTrigger.click;\n\n        if (this.isWithActiveTrigger()) {\n          this.enter(null);\n        } else {\n          this.leave(null);\n        }\n      } else {\n        if (hasClass(this.getTipElement(), ClassName.SHOW)) {\n          this.leave(null);\n        } else {\n          this.enter(null);\n        }\n      }\n    }\n\n    // Show tooltip\n\n  }, {\n    key: 'show',\n    value: function show() {\n      var _this = this;\n\n      if (!document.body.contains(this.$element) || !isVisible(this.$element)) {\n        // If trigger element isn't in the DOM or is not visible\n        return;\n      }\n      // Build tooltip element (also sets this.$tip)\n      var tip = this.getTipElement();\n      this.fixTitle();\n      this.setContent(tip);\n      if (!this.isWithContent(tip)) {\n        // if No content, don't bother showing\n        this.$tip = null;\n        return;\n      }\n\n      // Set ID on tip and aria-describedby on element\n      setAttr(tip, 'id', this.$id);\n      this.addAriaDescribedby();\n\n      // Set animation on or off\n      if (this.$config.animation) {\n        addClass(tip, ClassName.FADE);\n      } else {\n        removeClass(tip, ClassName.FADE);\n      }\n\n      var placement = this.getPlacement();\n      var attachment = this.constructor.getAttachment(placement);\n      this.addAttachmentClass(attachment);\n\n      // Create a cancelable BvEvent\n      var showEvt = new BvEvent('show', {\n        cancelable: true,\n        target: this.$element,\n        relatedTarget: tip\n      });\n      this.emitEvent(showEvt);\n      if (showEvt.defaultPrevented) {\n        // Don't show if event cancelled\n        this.$tip = null;\n        return;\n      }\n\n      // Insert tooltip if needed\n      var container = this.getContainer();\n      if (!document.body.contains(tip)) {\n        container.appendChild(tip);\n      }\n\n      // Refresh popper\n      this.removePopper();\n      this.$popper = new Popper(this.$element, tip, this.getPopperConfig(placement, tip));\n\n      // Transitionend Callback\n      var complete = function complete() {\n        if (_this.$config.animation) {\n          _this.fixTransition(tip);\n        }\n        var prevHoverState = _this.$hoverState;\n        _this.$hoverState = null;\n        if (prevHoverState === HoverState.OUT) {\n          _this.leave(null);\n        }\n        // Create a non-cancelable BvEvent\n        var shownEvt = new BvEvent('shown', {\n          cancelable: false,\n          target: _this.$element,\n          relatedTarget: tip\n        });\n        _this.emitEvent(shownEvt);\n      };\n\n      // Enable while open listeners/watchers\n      this.setWhileOpenListeners(true);\n\n      // Show tip\n      addClass(tip, ClassName.SHOW);\n\n      // Start the transition/animation\n      this.transitionOnce(tip, complete);\n    }\n\n    // handler for periodic visibility check\n\n  }, {\n    key: 'visibleCheck',\n    value: function visibleCheck(on) {\n      var _this2 = this;\n\n      clearInterval(this.$visibleInterval);\n      this.$visibleInterval = null;\n      if (on) {\n        this.$visibleInterval = setInterval(function () {\n          var tip = _this2.getTipElement();\n          if (tip && !isVisible(_this2.$element) && hasClass(tip, ClassName.SHOW)) {\n            // Element is no longer visible, so force-hide the tooltip\n            _this2.forceHide();\n          }\n        }, 100);\n      }\n    }\n  }, {\n    key: 'setWhileOpenListeners',\n    value: function setWhileOpenListeners(on) {\n      // Modal close events\n      this.setModalListener(on);\n      // Periodic $element visibility check\n      // For handling when tip is in <keepalive>, tabs, carousel, etc\n      this.visibleCheck(on);\n      // Route change events\n      this.setRouteWatcher(on);\n      // Ontouch start listeners\n      this.setOnTouchStartListener(on);\n      if (on && /(focus|blur)/.test(this.$config.trigger)) {\n        // If focus moves between trigger element and tip container, dont close\n        eventOn(this.$tip, 'focusout', this);\n      } else {\n        eventOff(this.$tip, 'focusout', this);\n      }\n    }\n\n    // force hide of tip (internal method)\n\n  }, {\n    key: 'forceHide',\n    value: function forceHide() {\n      if (!this.$tip || !hasClass(this.$tip, ClassName.SHOW)) {\n        return;\n      }\n      // Disable while open listeners/watchers\n      this.setWhileOpenListeners(false);\n      // Clear any hover enter/leave event\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverTimeout = null;\n      this.$hoverState = '';\n      // Hide the tip\n      this.hide(null, true);\n    }\n\n    // Hide tooltip\n\n  }, {\n    key: 'hide',\n    value: function hide(callback, force) {\n      var _this3 = this;\n\n      var tip = this.$tip;\n      if (!tip) {\n        return;\n      }\n\n      // Create a canelable BvEvent\n      var hideEvt = new BvEvent('hide', {\n        // We disable cancelling if force is true\n        cancelable: !force,\n        target: this.$element,\n        relatedTarget: tip\n      });\n      this.emitEvent(hideEvt);\n      if (hideEvt.defaultPrevented) {\n        // Don't hide if event cancelled\n        return;\n      }\n\n      // Transitionend Callback\n      /* istanbul ignore next */\n      var complete = function complete() {\n        if (_this3.$hoverState !== HoverState.SHOW && tip.parentNode) {\n          // Remove tip from dom, and force recompile on next show\n          tip.parentNode.removeChild(tip);\n          _this3.removeAriaDescribedby();\n          _this3.removePopper();\n          _this3.$tip = null;\n        }\n        if (callback) {\n          callback();\n        }\n        // Create a non-cancelable BvEvent\n        var hiddenEvt = new BvEvent('hidden', {\n          cancelable: false,\n          target: _this3.$element,\n          relatedTarget: null\n        });\n        _this3.emitEvent(hiddenEvt);\n      };\n\n      // Disable while open listeners/watchers\n      this.setWhileOpenListeners(false);\n\n      // If forced close, disable animation\n      if (force) {\n        removeClass(tip, ClassName.FADE);\n      }\n      // Hide tip\n      removeClass(tip, ClassName.SHOW);\n\n      this.$activeTrigger.click = false;\n      this.$activeTrigger.focus = false;\n      this.$activeTrigger.hover = false;\n\n      // Start the hide transition\n      this.transitionOnce(tip, complete);\n\n      this.$hoverState = '';\n    }\n  }, {\n    key: 'emitEvent',\n    value: function emitEvent(evt) {\n      var evtName = evt.type;\n      if (this.$root && this.$root.$emit) {\n        // Emit an event on $root\n        this.$root.$emit('bv::' + this.constructor.NAME + '::' + evtName, evt);\n      }\n      var callbacks = this.$config.callbacks || {};\n      if (typeof callbacks[evtName] === 'function') {\n        callbacks[evtName](evt);\n      }\n    }\n  }, {\n    key: 'getContainer',\n    value: function getContainer() {\n      var container = this.$config.container;\n      var body = document.body;\n      // If we are in a modal, we append to the modal instead of body, unless a container is specified\n      return container === false ? closest(MODAL_CLASS, this.$element) || body : select(container, body) || body;\n    }\n\n    // Will be overritten by popover if needed\n\n  }, {\n    key: 'addAriaDescribedby',\n    value: function addAriaDescribedby() {\n      // Add aria-describedby on trigger element, without removing any other IDs\n      var desc = getAttr(this.$element, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).concat(this.$id).join(' ').trim();\n      setAttr(this.$element, 'aria-describedby', desc);\n    }\n\n    // Will be overritten by popover if needed\n\n  }, {\n    key: 'removeAriaDescribedby',\n    value: function removeAriaDescribedby() {\n      var _this4 = this;\n\n      var desc = getAttr(this.$element, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).filter(function (d) {\n        return d !== _this4.$id;\n      }).join(' ').trim();\n      if (desc) {\n        setAttr(this.$element, 'aria-describedby', desc);\n      } else {\n        removeAttr(this.$element, 'aria-describedby');\n      }\n    }\n  }, {\n    key: 'removePopper',\n    value: function removePopper() {\n      if (this.$popper) {\n        this.$popper.destroy();\n      }\n      this.$popper = null;\n    }\n\n    /* istanbul ignore next */\n\n  }, {\n    key: 'transitionOnce',\n    value: function transitionOnce(tip, complete) {\n      var _this5 = this;\n\n      var transEvents = this.getTransitionEndEvents();\n      var called = false;\n      clearTimeout(this.$fadeTimeout);\n      this.$fadeTimeout = null;\n      var fnOnce = function fnOnce() {\n        if (called) {\n          return;\n        }\n        called = true;\n        clearTimeout(_this5.$fadeTimeout);\n        _this5.$fadeTimeout = null;\n        transEvents.forEach(function (evtName) {\n          eventOff(tip, evtName, fnOnce);\n        });\n        // Call complete callback\n        complete();\n      };\n      if (hasClass(tip, ClassName.FADE)) {\n        transEvents.forEach(function (evtName) {\n          eventOn(tip, evtName, fnOnce);\n        });\n        // Fallback to setTimeout\n        this.$fadeTimeout = setTimeout(fnOnce, TRANSITION_DURATION);\n      } else {\n        fnOnce();\n      }\n    }\n\n    // What transitionend event(s) to use? (returns array of event names)\n\n  }, {\n    key: 'getTransitionEndEvents',\n    value: function getTransitionEndEvents() {\n      for (var name in TransitionEndEvents) {\n        if (this.$element.style[name] !== undefined) {\n          return TransitionEndEvents[name];\n        }\n      }\n      // fallback\n      return [];\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      if (this.$popper !== null) {\n        this.$popper.scheduleUpdate();\n      }\n    }\n\n    // NOTE: Overridden by PopOver class\n\n  }, {\n    key: 'isWithContent',\n    value: function isWithContent(tip) {\n      tip = tip || this.$tip;\n      if (!tip) {\n        return false;\n      }\n      return Boolean((select(Selector.TOOLTIP_INNER, tip) || {}).innerHTML);\n    }\n\n    // NOTE: Overridden by PopOver class\n\n  }, {\n    key: 'addAttachmentClass',\n    value: function addAttachmentClass(attachment) {\n      addClass(this.getTipElement(), CLASS_PREFIX + '-' + attachment);\n    }\n  }, {\n    key: 'getTipElement',\n    value: function getTipElement() {\n      if (!this.$tip) {\n        // Try and compile user supplied template, or fallback to default template\n        this.$tip = this.compileTemplate(this.$config.template) || this.compileTemplate(this.constructor.Default.template);\n      }\n      // Add tab index so tip can be focused, and to allow it to be set as relatedTargt in focusin/out events\n      this.$tip.tabIndex = -1;\n      return this.$tip;\n    }\n  }, {\n    key: 'compileTemplate',\n    value: function compileTemplate(html) {\n      if (!html || typeof html !== 'string') {\n        return null;\n      }\n      var div = document.createElement('div');\n      div.innerHTML = html.trim();\n      var node = div.firstElementChild ? div.removeChild(div.firstElementChild) : null;\n      div = null;\n      return node;\n    }\n\n    // NOTE: Overridden by PopOver class\n\n  }, {\n    key: 'setContent',\n    value: function setContent(tip) {\n      this.setElementContent(select(Selector.TOOLTIP_INNER, tip), this.getTitle());\n      removeClass(tip, ClassName.FADE);\n      removeClass(tip, ClassName.SHOW);\n    }\n  }, {\n    key: 'setElementContent',\n    value: function setElementContent(container, content) {\n      if (!container) {\n        // If container element doesn't exist, just return\n        return;\n      }\n      var allowHtml = this.$config.html;\n      if ((typeof content === 'undefined' ? 'undefined' : _typeof(content)) === 'object' && content.nodeType) {\n        // content is a DOM node\n        if (allowHtml) {\n          if (content.parentElement !== container) {\n            container.innerHtml = '';\n            container.appendChild(content);\n          }\n        } else {\n          container.innerText = content.innerText;\n        }\n      } else {\n        // We have a plain HTML string or Text\n        container[allowHtml ? 'innerHTML' : 'innerText'] = content;\n      }\n    }\n\n    // NOTE: Overridden by PopOver class\n\n  }, {\n    key: 'getTitle',\n    value: function getTitle() {\n      var title = this.$config.title || '';\n      if (typeof title === 'function') {\n        // Call the function to get the title value\n        title = title(this.$element);\n      }\n      if ((typeof title === 'undefined' ? 'undefined' : _typeof(title)) === 'object' && title.nodeType && !title.innerHTML.trim()) {\n        // We have a DOM node, but without inner content, so just return empty string\n        title = '';\n      }\n      if (typeof title === 'string') {\n        title = title.trim();\n      }\n      if (!title) {\n        // If an explicit title is not given, try element's title atributes\n        title = getAttr(this.$element, 'title') || getAttr(this.$element, 'data-original-title') || '';\n        title = title.trim();\n      }\n\n      return title;\n    }\n  }, {\n    key: 'listen',\n    value: function listen() {\n      var _this6 = this;\n\n      var triggers = this.$config.trigger.trim().split(/\\s+/);\n      var el = this.$element;\n\n      // Listen for global show/hide events\n      this.setRootListener(true);\n\n      // Using 'this' as the handler will get automagically directed to this.handleEvent\n      // And maintain our binding to 'this'\n      triggers.forEach(function (trigger) {\n        if (trigger === 'click') {\n          eventOn(el, 'click', _this6);\n        } else if (trigger === 'focus') {\n          eventOn(el, 'focusin', _this6);\n          eventOn(el, 'focusout', _this6);\n        } else if (trigger === 'blur') {\n          // Used to close $tip when element looses focus\n          eventOn(el, 'focusout', _this6);\n        } else if (trigger === 'hover') {\n          eventOn(el, 'mouseenter', _this6);\n          eventOn(el, 'mouseleave', _this6);\n        }\n      }, this);\n    }\n  }, {\n    key: 'unListen',\n    value: function unListen() {\n      var _this7 = this;\n\n      var events = ['click', 'focusin', 'focusout', 'mouseenter', 'mouseleave'];\n      // Using \"this\" as the handler will get automagically directed to this.handleEvent\n      events.forEach(function (evt) {\n        eventOff(_this7.$element, evt, _this7);\n      }, this);\n\n      // Stop listening for global show/hide/enable/disable events\n      this.setRootListener(false);\n    }\n  }, {\n    key: 'handleEvent',\n    value: function handleEvent(e) {\n      // This special method allows us to use \"this\" as the event handlers\n      if (isDisabled(this.$element)) {\n        // If disabled, don't do anything. Note: if tip is shown before element gets\n        // disabled, then tip not close until no longer disabled or forcefully closed.\n        return;\n      }\n      if (!this.$isEnabled) {\n        // If not enable\n        return;\n      }\n      var type = e.type;\n      var target = e.target;\n      var relatedTarget = e.relatedTarget;\n      var $element = this.$element;\n      var $tip = this.$tip;\n      if (type === 'click') {\n        this.toggle(e);\n      } else if (type === 'focusin' || type === 'mouseenter') {\n        this.enter(e);\n      } else if (type === 'focusout') {\n        // target is the element which is loosing focus\n        // And relatedTarget is the element gaining focus\n        if ($tip && $element && $element.contains(target) && $tip.contains(relatedTarget)) {\n          // If focus moves from $element to $tip, don't trigger a leave\n          return;\n        }\n        if ($tip && $element && $tip.contains(target) && $element.contains(relatedTarget)) {\n          // If focus moves from $tip to $element, don't trigger a leave\n          return;\n        }\n        if ($tip && $tip.contains(target) && $tip.contains(relatedTarget)) {\n          // If focus moves within $tip, don't trigger a leave\n          return;\n        }\n        if ($element && $element.contains(target) && $element.contains(relatedTarget)) {\n          // If focus moves within $element, don't trigger a leave\n          return;\n        }\n        // Otherwise trigger a leave\n        this.leave(e);\n      } else if (type === 'mouseleave') {\n        this.leave(e);\n      }\n    }\n\n    /* istanbul ignore next */\n\n  }, {\n    key: 'setRouteWatcher',\n    value: function setRouteWatcher(on) {\n      var _this8 = this;\n\n      if (on) {\n        this.setRouteWatcher(false);\n        if (this.$root && Boolean(this.$root.$route)) {\n          this.$routeWatcher = this.$root.$watch('$route', function (newVal, oldVal) {\n            if (newVal === oldVal) {\n              return;\n            }\n            // If route has changed, we force hide the tooltip/popover\n            _this8.forceHide();\n          });\n        }\n      } else {\n        if (this.$routeWatcher) {\n          // cancel the route watcher by calling hte stored reference\n          this.$routeWatcher();\n          this.$routeWatcher = null;\n        }\n      }\n    }\n\n    /* istanbul ignore next */\n\n  }, {\n    key: 'setModalListener',\n    value: function setModalListener(on) {\n      var modal = closest(MODAL_CLASS, this.$element);\n      if (!modal) {\n        // If we are not in a modal, don't worry. be happy\n        return;\n      }\n      // We can listen for modal hidden events on $root\n      if (this.$root) {\n        this.$root[on ? '$on' : '$off'](MODAL_CLOSE_EVENT, this.$forceHide);\n      }\n    }\n\n    /* istanbul ignore next */\n\n  }, {\n    key: 'setRootListener',\n    value: function setRootListener(on) {\n      // Listen for global 'bv::{hide|show}::{tooltip|popover}' hide request event\n      if (this.$root) {\n        this.$root[on ? '$on' : '$off']('bv::hide::' + this.constructor.NAME, this.$doHide);\n        this.$root[on ? '$on' : '$off']('bv::show::' + this.constructor.NAME, this.$doShow);\n        this.$root[on ? '$on' : '$off']('bv::disable::' + this.constructor.NAME, this.$doDisable);\n        this.$root[on ? '$on' : '$off']('bv::enable::' + this.constructor.NAME, this.$doEnable);\n      }\n    }\n  }, {\n    key: 'doHide',\n    value: function doHide(id) {\n      // Programmatically hide tooltip or popover\n      if (!id) {\n        // Close all tooltips or popovers\n        this.forceHide();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Close this specific tooltip or popover\n        this.hide();\n      }\n    }\n  }, {\n    key: 'doShow',\n    value: function doShow(id) {\n      // Programmatically show tooltip or popover\n      if (!id) {\n        // Open all tooltips or popovers\n        this.show();\n      } else if (id && this.$element && this.$element.id && this.$element.id === id) {\n        // Show this specific tooltip or popover\n        this.show();\n      }\n    }\n  }, {\n    key: 'doDisable',\n    value: function doDisable(id) {\n      // Programmatically disable tooltip or popover\n      if (!id) {\n        // Disable all tooltips or popovers\n        this.disable();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Disable this specific tooltip or popover\n        this.disable();\n      }\n    }\n  }, {\n    key: 'doEnable',\n    value: function doEnable(id) {\n      // Programmatically enable tooltip or popover\n      if (!id) {\n        // Enable all tooltips or popovers\n        this.enable();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Enable this specific tooltip or popover\n        this.enable();\n      }\n    }\n\n    /* istanbul ignore next */\n\n  }, {\n    key: 'setOnTouchStartListener',\n    value: function setOnTouchStartListener(on) {\n      var _this9 = this;\n\n      // if this is a touch-enabled device we add extra\n      // empty mouseover listeners to the body's immediate children;\n      // only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n      if ('ontouchstart' in document.documentElement) {\n        arrayFrom(document.body.children).forEach(function (el) {\n          if (on) {\n            eventOn(el, 'mouseover', _this9._noop);\n          } else {\n            eventOff(el, 'mouseover', _this9._noop);\n          }\n        });\n      }\n    }\n\n    /* istanbul ignore next */\n\n  }, {\n    key: '_noop',\n    value: function _noop() {\n      // Empty noop handler for ontouchstart devices\n    }\n  }, {\n    key: 'fixTitle',\n    value: function fixTitle() {\n      var el = this.$element;\n      var titleType = _typeof(getAttr(el, 'data-original-title'));\n      if (getAttr(el, 'title') || titleType !== 'string') {\n        setAttr(el, 'data-original-title', getAttr(el, 'title') || '');\n        setAttr(el, 'title', '');\n      }\n    }\n\n    // Enter handler\n    /* istanbul ignore next */\n\n  }, {\n    key: 'enter',\n    value: function enter(e) {\n      var _this10 = this;\n\n      if (e) {\n        this.$activeTrigger[e.type === 'focusin' ? 'focus' : 'hover'] = true;\n      }\n      if (hasClass(this.getTipElement(), ClassName.SHOW) || this.$hoverState === HoverState.SHOW) {\n        this.$hoverState = HoverState.SHOW;\n        return;\n      }\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverState = HoverState.SHOW;\n      if (!this.$config.delay || !this.$config.delay.show) {\n        this.show();\n        return;\n      }\n      this.$hoverTimeout = setTimeout(function () {\n        if (_this10.$hoverState === HoverState.SHOW) {\n          _this10.show();\n        }\n      }, this.$config.delay.show);\n    }\n\n    // Leave handler\n    /* istanbul ignore next */\n\n  }, {\n    key: 'leave',\n    value: function leave(e) {\n      var _this11 = this;\n\n      if (e) {\n        this.$activeTrigger[e.type === 'focusout' ? 'focus' : 'hover'] = false;\n        if (e.type === 'focusout' && /blur/.test(this.$config.trigger)) {\n          // Special case for `blur`: we clear out the other triggers\n          this.$activeTrigger.click = false;\n          this.$activeTrigger.hover = false;\n        }\n      }\n      if (this.isWithActiveTrigger()) {\n        return;\n      }\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverState = HoverState.OUT;\n      if (!this.$config.delay || !this.$config.delay.hide) {\n        this.hide();\n        return;\n      }\n      this.$hoverTimeout = setTimeout(function () {\n        if (_this11.$hoverState === HoverState.OUT) {\n          _this11.hide();\n        }\n      }, this.$config.delay.hide);\n    }\n  }, {\n    key: 'getPopperConfig',\n    value: function getPopperConfig(placement, tip) {\n      var _this12 = this;\n\n      return {\n        placement: this.constructor.getAttachment(placement),\n        modifiers: {\n          offset: { offset: this.getOffset(placement, tip) },\n          flip: { behavior: this.$config.fallbackPlacement },\n          arrow: { element: '.arrow' },\n          preventOverflow: { boundariesElement: this.$config.boundary }\n        },\n        onCreate: function onCreate(data) {\n          // Handle flipping arrow classes\n          if (data.originalPlacement !== data.placement) {\n            _this12.handlePopperPlacementChange(data);\n          }\n        },\n        onUpdate: function onUpdate(data) {\n          // Handle flipping arrow classes\n          _this12.handlePopperPlacementChange(data);\n        }\n      };\n    }\n  }, {\n    key: 'getOffset',\n    value: function getOffset(placement, tip) {\n      if (!this.$config.offset) {\n        var arrow = select(Selector.ARROW, tip);\n        var arrowOffset = parseFloat(getCS(arrow).width) + parseFloat(this.$config.arrowPadding);\n        switch (OffsetMap[placement.toUpperCase()]) {\n          case +1:\n            return '+50%p - ' + arrowOffset + 'px';\n          case -1:\n            return '-50%p + ' + arrowOffset + 'px';\n          default:\n            return 0;\n        }\n      }\n      return this.$config.offset;\n    }\n  }, {\n    key: 'getPlacement',\n    value: function getPlacement() {\n      var placement = this.$config.placement;\n      if (typeof placement === 'function') {\n        return placement.call(this, this.$tip, this.$element);\n      }\n      return placement;\n    }\n  }, {\n    key: 'isWithActiveTrigger',\n    value: function isWithActiveTrigger() {\n      for (var trigger in this.$activeTrigger) {\n        if (this.$activeTrigger[trigger]) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // NOTE: Overridden by PopOver class\n\n  }, {\n    key: 'cleanTipClass',\n    value: function cleanTipClass() {\n      var tip = this.getTipElement();\n      var tabClass = tip.className.match(BSCLS_PREFIX_REGEX);\n      if (tabClass !== null && tabClass.length > 0) {\n        tabClass.forEach(function (cls) {\n          removeClass(tip, cls);\n        });\n      }\n    }\n  }, {\n    key: 'handlePopperPlacementChange',\n    value: function handlePopperPlacementChange(data) {\n      this.cleanTipClass();\n      this.addAttachmentClass(this.constructor.getAttachment(data.placement));\n    }\n  }, {\n    key: 'fixTransition',\n    value: function fixTransition(tip) {\n      var initConfigAnimation = this.$config.animation || false;\n      if (getAttr(tip, 'x-placement') !== null) {\n        return;\n      }\n      removeClass(tip, ClassName.FADE);\n      this.$config.animation = false;\n      this.hide();\n      this.show();\n      this.$config.animation = initConfigAnimation;\n    }\n  }], [{\n    key: 'getAttachment',\n    value: function getAttachment(placement) {\n      return AttachmentMap[placement.toUpperCase()];\n    }\n  }, {\n    key: 'Default',\n    get: function get() {\n      return Defaults;\n    }\n\n    // NOTE: Overridden by PopOver class\n\n  }, {\n    key: 'NAME',\n    get: function get() {\n      return NAME;\n    }\n  }]);\n\n  return ToolTip;\n}();\n\nexport default ToolTip;","/**\n * Log a warning message to the console with bootstrap-vue formatting sugar.\n * @param {string} message\n */\n/* istanbul ignore next */\nfunction warn(message) {\n  console.warn(\"[Bootstrap-Vue warn]: \" + message);\n}\n\nexport default warn;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nimport Popper from 'popper.js';\nimport ToolTip from '../../utils/tooltip.class';\nimport { assign, keys } from '../../utils/object';\nimport warn from '../../utils/warn';\n\nvar inBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n// Key which we use to store tooltip object on element\nvar BVTT = '__BV_ToolTip__';\n\n// Valid event triggers\nvar validTriggers = {\n  'focus': true,\n  'hover': true,\n  'click': true,\n  'blur': true\n\n  // Build a ToolTip config based on bindings (if any)\n  // Arguments and modifiers take precedence over passed value config object\n  /* istanbul ignore next: not easy to test */\n};function parseBindings(bindings) {\n  // We start out with a blank config\n  var config = {};\n\n  // Process bindings.value\n  if (typeof bindings.value === 'string') {\n    // Value is tooltip content (html optionally supported)\n    config.title = bindings.value;\n  } else if (typeof bindings.value === 'function') {\n    // Title generator function\n    config.title = bindings.value;\n  } else if (_typeof(bindings.value) === 'object') {\n    // Value is config object, so merge\n    config = assign(bindings.value);\n  }\n\n  // If Argument, assume element ID of container element\n  if (bindings.arg) {\n    // Element ID specified as arg. We must prepend '#' to become a CSS selector\n    config.container = '#' + bindings.arg;\n  }\n\n  // Process modifiers\n  keys(bindings.modifiers).forEach(function (mod) {\n    if (/^html$/.test(mod)) {\n      // Title allows HTML\n      config.html = true;\n    } else if (/^nofade$/.test(mod)) {\n      // no animation\n      config.animation = false;\n    } else if (/^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/.test(mod)) {\n      // placement of tooltip\n      config.placement = mod;\n    } else if (/^(window|viewport)$/.test(mod)) {\n      // bounday of tooltip\n      config.boundary = mod;\n    } else if (/^d\\d+$/.test(mod)) {\n      // delay value\n      var delay = parseInt(mod.slice(1), 10) || 0;\n      if (delay) {\n        config.delay = delay;\n      }\n    } else if (/^o-?\\d+$/.test(mod)) {\n      // offset value. Negative allowed\n      var offset = parseInt(mod.slice(1), 10) || 0;\n      if (offset) {\n        config.offset = offset;\n      }\n    }\n  });\n\n  // Special handling of event trigger modifiers Trigger is a space separated list\n  var selectedTriggers = {};\n\n  // parse current config object trigger\n  var triggers = typeof config.trigger === 'string' ? config.trigger.trim().split(/\\s+/) : [];\n  triggers.forEach(function (trigger) {\n    if (validTriggers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  });\n\n  // Parse Modifiers for triggers\n  keys(validTriggers).forEach(function (trigger) {\n    if (bindings.modifiers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  });\n\n  // Sanitize triggers\n  config.trigger = keys(selectedTriggers).join(' ');\n  if (config.trigger === 'blur') {\n    // Blur by itself is useless, so convert it to 'focus'\n    config.trigger = 'focus';\n  }\n  if (!config.trigger) {\n    // remove trigger config\n    delete config.trigger;\n  }\n\n  return config;\n}\n\n//\n// Add or Update tooltip on our element\n//\n/* istanbul ignore next: not easy to test */\nfunction applyBVTT(el, bindings, vnode) {\n  if (!inBrowser) {\n    return;\n  }\n  if (!Popper) {\n    // Popper is required for tooltips to work\n    warn('v-b-tooltip: Popper.js is required for tooltips to work');\n    return;\n  }\n  if (el[BVTT]) {\n    el[BVTT].updateConfig(parseBindings(bindings));\n  } else {\n    el[BVTT] = new ToolTip(el, parseBindings(bindings), vnode.context.$root);\n  }\n}\n\n//\n// Remove tooltip on our element\n//\n/* istanbul ignore next: not easy to test */\nfunction removeBVTT(el) {\n  if (!inBrowser) {\n    return;\n  }\n  if (el[BVTT]) {\n    el[BVTT].destroy();\n    el[BVTT] = null;\n    delete el[BVTT];\n  }\n}\n\n/*\n * Export our directive\n */\n/* istanbul ignore next: not easy to test */\nexport default {\n  bind: function bind(el, bindings, vnode) {\n    applyBVTT(el, bindings, vnode);\n  },\n  inserted: function inserted(el, bindings, vnode) {\n    applyBVTT(el, bindings, vnode);\n  },\n  update: function update(el, bindings, vnode) {\n    if (bindings.value !== bindings.oldValue) {\n      applyBVTT(el, bindings, vnode);\n    }\n  },\n  componentUpdated: function componentUpdated(el, bindings, vnode) {\n    if (bindings.value !== bindings.oldValue) {\n      applyBVTT(el, bindings, vnode);\n    }\n  },\n  unbind: function unbind(el) {\n    removeBVTT(el);\n  }\n};","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport ToolTip from './tooltip.class';\nimport { assign } from './object';\nimport { select, addClass, removeClass, getAttr } from './dom';\n\nvar NAME = 'popover';\nvar CLASS_PREFIX = 'bs-popover';\nvar BSCLS_PREFIX_REGEX = new RegExp('\\\\b' + CLASS_PREFIX + '\\\\S+', 'g');\n\nvar Defaults = assign({}, ToolTip.Default, {\n  placement: 'right',\n  trigger: 'click',\n  content: '',\n  template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div></div>'\n});\n\nvar ClassName = {\n  FADE: 'fade',\n  SHOW: 'show'\n};\n\nvar Selector = {\n  TITLE: '.popover-header',\n  CONTENT: '.popover-body'\n\n  /* istanbul ignore next: dificult to test in Jest/JSDOM environment */\n};\nvar PopOver = function (_ToolTip) {\n  _inherits(PopOver, _ToolTip);\n\n  function PopOver() {\n    _classCallCheck(this, PopOver);\n\n    return _possibleConstructorReturn(this, (PopOver.__proto__ || Object.getPrototypeOf(PopOver)).apply(this, arguments));\n  }\n\n  _createClass(PopOver, [{\n    key: 'isWithContent',\n\n\n    // Method overrides\n\n    value: function isWithContent(tip) {\n      tip = tip || this.$tip;\n      if (!tip) {\n        return false;\n      }\n      var hasTitle = Boolean((select(Selector.TITLE, tip) || {}).innerHTML);\n      var hasContent = Boolean((select(Selector.CONTENT, tip) || {}).innerHTML);\n      return hasTitle || hasContent;\n    }\n  }, {\n    key: 'addAttachmentClass',\n    value: function addAttachmentClass(attachment) {\n      addClass(this.getTipElement(), CLASS_PREFIX + '-' + attachment);\n    }\n  }, {\n    key: 'setContent',\n    value: function setContent(tip) {\n      // we use append for html objects to maintain js events/components\n      this.setElementContent(select(Selector.TITLE, tip), this.getTitle());\n      this.setElementContent(select(Selector.CONTENT, tip), this.getContent());\n\n      removeClass(tip, ClassName.FADE);\n      removeClass(tip, ClassName.SHOW);\n    }\n\n    // This method may look identical to ToolTip version, but it uses a different RegEx defined above\n\n  }, {\n    key: 'cleanTipClass',\n    value: function cleanTipClass() {\n      var tip = this.getTipElement();\n      var tabClass = tip.className.match(BSCLS_PREFIX_REGEX);\n      if (tabClass !== null && tabClass.length > 0) {\n        tabClass.forEach(function (cls) {\n          removeClass(tip, cls);\n        });\n      }\n    }\n  }, {\n    key: 'getTitle',\n    value: function getTitle() {\n      var title = this.$config.title || '';\n      if (typeof title === 'function') {\n        title = title(this.$element);\n      }\n      if ((typeof title === 'undefined' ? 'undefined' : _typeof(title)) === 'object' && title.nodeType && !title.innerHTML.trim()) {\n        // We have a dom node, but without inner content, so just return an empty string\n        title = '';\n      }\n      if (typeof title === 'string') {\n        title = title.trim();\n      }\n      if (!title) {\n        // Try and grab element's title attribute\n        title = getAttr(this.$element, 'title') || getAttr(this.$element, 'data-original-title') || '';\n        title = title.trim();\n      }\n      return title;\n    }\n\n    // New methods\n\n  }, {\n    key: 'getContent',\n    value: function getContent() {\n      var content = this.$config.content || '';\n      if (typeof content === 'function') {\n        content = content(this.$element);\n      }\n      if ((typeof content === 'undefined' ? 'undefined' : _typeof(content)) === 'object' && content.nodeType && !content.innerHTML.trim()) {\n        // We have a dom node, but without inner content, so just return an empty string\n        content = '';\n      }\n      if (typeof content === 'string') {\n        content = content.trim();\n      }\n      return content;\n    }\n  }], [{\n    key: 'Default',\n\n    // Getter overrides\n\n    get: function get() {\n      return Defaults;\n    }\n  }, {\n    key: 'NAME',\n    get: function get() {\n      return NAME;\n    }\n  }]);\n\n  return PopOver;\n}(ToolTip);\n\nexport default PopOver;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nimport Popper from 'popper.js';\nimport PopOver from '../../utils/popover.class';\nimport { assign, keys } from '../../utils/object';\nimport warn from '../../utils/warn';\n\nvar inBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n// Key which we use to store tooltip object on element\nvar BVPO = '__BV_PopOver__';\n\n// Valid event triggers\nvar validTriggers = {\n  'focus': true,\n  'hover': true,\n  'click': true,\n  'blur': true\n\n  // Build a PopOver config based on bindings (if any)\n  // Arguments and modifiers take precedence over pased value config object\n  /* istanbul ignore next: not easy to test */\n};function parseBindings(bindings) {\n  // We start out with a blank config\n  var config = {};\n\n  // Process bindings.value\n  if (typeof bindings.value === 'string') {\n    // Value is popover content (html optionally supported)\n    config.content = bindings.value;\n  } else if (typeof bindings.value === 'function') {\n    // Content generator function\n    config.content = bindings.value;\n  } else if (_typeof(bindings.value) === 'object') {\n    // Value is config object, so merge\n    config = assign(bindings.value);\n  }\n\n  // If Argument, assume element ID of container element\n  if (bindings.arg) {\n    // Element ID specified as arg. We must prepend '#' to become a CSS selector\n    config.container = '#' + bindings.arg;\n  }\n\n  // Process modifiers\n  keys(bindings.modifiers).forEach(function (mod) {\n    if (/^html$/.test(mod)) {\n      // Title allows HTML\n      config.html = true;\n    } else if (/^nofade$/.test(mod)) {\n      // no animation\n      config.animation = false;\n    } else if (/^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/.test(mod)) {\n      // placement of popover\n      config.placement = mod;\n    } else if (/^(window|viewport)$/.test(mod)) {\n      // bounday of popover\n      config.boundary = mod;\n    } else if (/^d\\d+$/.test(mod)) {\n      // delay value\n      var delay = parseInt(mod.slice(1), 10) || 0;\n      if (delay) {\n        config.delay = delay;\n      }\n    } else if (/^o-?\\d+$/.test(mod)) {\n      // offset value (negative allowed)\n      var offset = parseInt(mod.slice(1), 10) || 0;\n      if (offset) {\n        config.offset = offset;\n      }\n    }\n  });\n\n  // Special handling of event trigger modifiers Trigger is a space separated list\n  var selectedTriggers = {};\n\n  // parse current config object trigger\n  var triggers = typeof config.trigger === 'string' ? config.trigger.trim().split(/\\s+/) : [];\n  triggers.forEach(function (trigger) {\n    if (validTriggers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  });\n\n  // Parse Modifiers for triggers\n  keys(validTriggers).forEach(function (trigger) {\n    if (bindings.modifiers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  });\n\n  // Sanitize triggers\n  config.trigger = keys(selectedTriggers).join(' ');\n  if (config.trigger === 'blur') {\n    // Blur by itself is useless, so convert it to focus\n    config.trigger = 'focus';\n  }\n  if (!config.trigger) {\n    // remove trigger config\n    delete config.trigger;\n  }\n\n  return config;\n}\n\n//\n// Add or Update popover on our element\n//\n/* istanbul ignore next: not easy to test */\nfunction applyBVPO(el, bindings, vnode) {\n  if (!inBrowser) {\n    return;\n  }\n  if (!Popper) {\n    // Popper is required for tooltips to work\n    warn('v-b-popover: Popper.js is required for popovers to work');\n    return;\n  }\n  if (el[BVPO]) {\n    el[BVPO].updateConfig(parseBindings(bindings));\n  } else {\n    el[BVPO] = new PopOver(el, parseBindings(bindings), vnode.context.$root);\n  }\n};\n\n//\n// Remove popover on our element\n//\n/* istanbul ignore next */\nfunction removeBVPO(el) {\n  if (!inBrowser) {\n    return;\n  }\n  if (el[BVPO]) {\n    el[BVPO].destroy();\n    el[BVPO] = null;\n    delete el[BVPO];\n  }\n}\n\n/*\n * Export our directive\n */\n/* istanbul ignore next: not easy to test */\nexport default {\n  bind: function bind(el, bindings, vnode) {\n    applyBVPO(el, bindings, vnode);\n  },\n  inserted: function inserted(el, bindings, vnode) {\n    applyBVPO(el, bindings, vnode);\n  },\n  update: function update(el, bindings, vnode) {\n    if (bindings.value !== bindings.oldValue) {\n      applyBVPO(el, bindings, vnode);\n    }\n  },\n  componentUpdated: function componentUpdated(el, bindings, vnode) {\n    if (bindings.value !== bindings.oldValue) {\n      applyBVPO(el, bindings, vnode);\n    }\n  },\n  unbind: function unbind(el) {\n    removeBVPO(el);\n  }\n};","<template>\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <small class=\"d-block text-uppercase font-weight-bold mb-3\">Tooltips</small>\n            <base-button size=\"sm\" type=\"primary\" class=\"btn-tooltip\"\n                         v-b-tooltip.hover.left title=\"Tooltip on left\">On left\n            </base-button>\n            <base-button size=\"sm\" type=\"primary\" class=\"btn-tooltip\"\n                         v-b-tooltip.hover.top title=\"Tooltip on top\">On top\n            </base-button>\n            <base-button size=\"sm\" type=\"primary\" class=\"btn-tooltip\"\n                         v-b-tooltip.hover.bottom title=\"Tooltip on bottom\">On bottom\n            </base-button>\n            <base-button size=\"sm\" type=\"primary\" class=\"btn-tooltip\"\n                         v-b-tooltip.hover.right title=\"Tooltip on right\">On right\n            </base-button>\n        </div>\n        <div class=\"col-lg-6 mt-4 mt-lg-0\">\n            <small class=\"d-block text-uppercase font-weight-bold mb-3\">Popovers</small>\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.left=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On Left\">On left\n            </base-button>\n\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.left=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On Left\">On left\n            </base-button>\n\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.top=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On Top\">On top\n            </base-button>\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.right=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On right\">On right\n            </base-button>\n            <base-button size=\"sm\" type=\"default\"\n                         v-b-popover.hover.bottom=\"'Vivamus sagittis lacus vel augue laoreet rutrum faucibus.'\"\n                         title=\"Popover On bottom\">On bottom\n            </base-button>\n        </div>\n    </div>\n</template>\n<script>\nimport BTooltip from \"bootstrap-vue/es/directives/tooltip/tooltip\";\nimport BPopover from \"bootstrap-vue/es/directives/popover/popover\";\n\nexport default {\n  directives: {\n    BTooltip,\n    BPopover\n  }\n};\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tooltips.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tooltips.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tooltips.vue?vue&type=template&id=bb3114be&\"\nimport script from \"./Tooltips.vue?vue&type=script&lang=js&\"\nexport * from \"./Tooltips.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.3\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && parent.nodeName === 'HTML') {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n"],"sourceRoot":""}